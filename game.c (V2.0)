#include "game.h"

//game.c Version 2.0 - Now contains fully functional startGame and movePlayer functions

/*__________________________________________________________________________________________________________________*/
//FUNCTION 1 - startGame

void startGame(Player *player) { /* Pointing to address of player to allow for modification of position, fuel
                                    and parts player data */

//PROLOGUE

    //Read prologue text from text file
    FILE *file = fopen("prologue.txt", "r");  //"r" mode is reading mode

    //Check if text file opened
    if (file == NULL) {
        printf("Error! Could not open prologue text file\n");
        return;  // Exit game if text file could not be opened
    }


    //Display the prologue text
    char line[150];  //creates a buffer to hold each line of prologue text, set to 150 to hold longest line.

    while (fgets(line, sizeof(line), file)) { /* Reads a line and stores it in buffer
                                                          while loop continues until 'fgets' returns nothing */

        printf("%s", line);  //Prints each line read from the text file
    }
    fclose(file);  //Close text file

/* ..................................................................................................................*/
//DIFFICULTY

    int difficulty; //Integer variable for difficulty setting

    // Player can choose difficulty at start of game
    printf("\n\nPlease choose a difficulty setting...\n");
    printf("Enter '1' for Normal Mode\n"); //Starting fuel = 60 Litres
    printf("Enter '2' for Hard Mode\n");   //Starting fuel = 40 Litres
    scanf("%d", &difficulty);

    while (difficulty != 1 && difficulty != 2) { // loop to ensure only 1 or 2 is pressed.

        printf("Please press '1' for Normal or '2' for Hard:");
        scanf("%d", &difficulty);
    }

    // Set starting fuel based on difficulty selected by the user
    if (difficulty == 1) { // double equal used to compare, not set.
        player->fuel = 60;
    } else {
        player->fuel = 40;
    }

/*...................................................................................................................*/
//WORLD STARTING POSITION

    // Sets player starting position to the center of world map (10, 10)
    player->x = world_size / 2;
    player->y = world_size / 2;

/*...................................................................................................................*/
//STARTING SPACESHIP PARTS

    // Sets collected parts at start of game to 0
    player->parts = 0;

    printf("The game has started! You have %dL of fuel left. Good luck!\n", player->fuel);
}
/*__________________________________________________________________________________________________________________*/
//FUNCTION 2 - movePlayer

void movePlayer(Player *player,char move){

//PLAYER MOVEMENT

    //Switch and case statements used to determine player movement using WASD
    switch (move) {

//MOVE UP
        /* Moving up decreases y value
           Case w checks if y > 0
           If yes, move up
           If no, player is already at the top of world (row 0) and case w does not run as if statement becomes false */

        case 'w': // move up
            if (player->y > 0) {
                player->y--;
                player->fuel--; /*Decrements fuel by 1L for each attempted move. Pointer points to fuel section
                                  of player address. Line placed in each case statement to prevent fuel consumption when leaving world */
            }
        break;

//MOVE DOWN
        /* Moving down increases y value
           Case s checks if y < 19 (world size - 1)
           If yes, player moves down
           If no, player is at the bottom edge of world and if statement is false */

        case 's': // move down
            if (player->y < world_size - 1) {
                player->y++;
                player->fuel--; }
        break;

//MOVE LEFT
        /* Moving left decreases x value
           Case a checks if x > 0
           If yes, player can move left
           If no, player is already at far left of world and cannot move */

        case 'a': // move left
            if (player->x > 0) {
                player->x--;
            player->fuel--; }
        break;

//MOVE RIGHT
        /* Moving right increases x value
          Case d checks if x < 19 (world size -1)
          If yes, player can move right
          If no, player is already at far right of world and if statement is false */

        case 'd': // move right
            if (player->x < world_size - 1) {
                player->x++;
            player->fuel--; }
        break;

        default: // This statement is added to ignore all other input besides w, a, s and d
        break;
    }
}
/*__________________________________________________________________________________________________________________*/
